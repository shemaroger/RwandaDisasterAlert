# Generated by Django 5.2.6 on 2025-09-11 15:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DisasterType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('name_rw', models.CharField(blank=True, max_length=50)),
                ('name_fr', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('description_rw', models.TextField(blank=True)),
                ('description_fr', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('color_code', models.CharField(default='#FF0000', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_type', models.CharField(choices=[('citizen', 'Citizen'), ('admin', 'Administrator'), ('operator', 'Operator'), ('authority', 'Authority')], default='citizen', max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')])),
                ('preferred_language', models.CharField(choices=[('en', 'English'), ('rw', 'Kinyarwanda'), ('fr', 'French')], default='rw', max_length=10)),
                ('location_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('location_lng', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('push_notifications_enabled', models.BooleanField(default=True)),
                ('sms_notifications_enabled', models.BooleanField(default=True)),
                ('email_notifications_enabled', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('name_rw', models.CharField(blank=True, max_length=100)),
                ('name_fr', models.CharField(blank=True, max_length=100)),
                ('location_type', models.CharField(choices=[('country', 'Country'), ('province', 'Province'), ('district', 'District'), ('sector', 'Sector'), ('cell', 'Cell'), ('village', 'Village')], max_length=20)),
                ('boundary_coordinates', models.JSONField(blank=True, null=True)),
                ('center_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('center_lng', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('population', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.location')),
            ],
            options={
                'ordering': ['location_type', 'name'],
                'unique_together': {('name', 'location_type', 'parent')},
            },
        ),
        migrations.CreateModel(
            name='IncidentReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('emergency', 'Emergency'), ('hazard', 'Hazard'), ('infrastructure', 'Infrastructure Damage'), ('health', 'Health Emergency'), ('security', 'Security Incident'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('address', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('under_review', 'Under Review'), ('verified', 'Verified'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='submitted', max_length=15)),
                ('priority', models.IntegerField(default=3)),
                ('images', models.JSONField(blank=True, null=True)),
                ('videos', models.JSONField(blank=True, null=True)),
                ('casualties', models.IntegerField(blank=True, null=True)),
                ('property_damage', models.TextField(blank=True)),
                ('immediate_needs', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_incidents', to=settings.AUTH_USER_MODEL)),
                ('disaster_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.disastertype')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incident_reports', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_incidents', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.location')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('name_rw', models.CharField(blank=True, max_length=100)),
                ('name_fr', models.CharField(blank=True, max_length=100)),
                ('contact_type', models.CharField(choices=[('police', 'Police'), ('fire', 'Fire Department'), ('medical', 'Medical/Hospital'), ('disaster_management', 'Disaster Management'), ('utility', 'Utility Company'), ('government', 'Government Office'), ('ngo', 'NGO/Relief Organization'), ('other', 'Other')], max_length=20)),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('website', models.URLField(blank=True)),
                ('address', models.TextField(blank=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('services_offered', models.TextField(blank=True)),
                ('availability', models.CharField(default='24/7', max_length=100)),
                ('languages_supported', models.CharField(default='rw,en,fr', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('display_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('locations', models.ManyToManyField(blank=True, to='myapp.location')),
            ],
            options={
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('title_rw', models.CharField(blank=True, max_length=200)),
                ('title_fr', models.CharField(blank=True, max_length=200)),
                ('message', models.TextField()),
                ('message_rw', models.TextField(blank=True)),
                ('message_fr', models.TextField(blank=True)),
                ('severity', models.CharField(choices=[('info', 'Information'), ('minor', 'Minor'), ('moderate', 'Moderate'), ('severe', 'Severe'), ('extreme', 'Extreme')], max_length=10)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('expired', 'Expired'), ('cancelled', 'Cancelled'), ('archived', 'Archived')], default='draft', max_length=10)),
                ('geofence_coordinates', models.JSONField(blank=True, null=True)),
                ('radius_km', models.FloatField(blank=True, null=True)),
                ('center_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('center_lng', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('issued_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('send_sms', models.BooleanField(default=True)),
                ('send_push', models.BooleanField(default=True)),
                ('send_email', models.BooleanField(default=False)),
                ('publish_web', models.BooleanField(default=True)),
                ('instructions', models.TextField(blank=True)),
                ('instructions_rw', models.TextField(blank=True)),
                ('instructions_fr', models.TextField(blank=True)),
                ('contact_info', models.TextField(blank=True)),
                ('resources_urls', models.JSONField(blank=True, null=True)),
                ('estimated_affected_population', models.IntegerField(blank=True, null=True)),
                ('priority_score', models.IntegerField(default=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_alerts', to=settings.AUTH_USER_MODEL)),
                ('issued_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issued_alerts', to=settings.AUTH_USER_MODEL)),
                ('disaster_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.disastertype')),
                ('affected_locations', models.ManyToManyField(blank=True, to='myapp.location')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.location'),
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('severity', models.CharField(blank=True, choices=[('info', 'Information'), ('minor', 'Minor'), ('moderate', 'Moderate'), ('severe', 'Severe'), ('extreme', 'Extreme')], max_length=10)),
                ('title_template', models.CharField(max_length=200)),
                ('title_template_rw', models.CharField(blank=True, max_length=200)),
                ('title_template_fr', models.CharField(blank=True, max_length=200)),
                ('message_template', models.TextField()),
                ('message_template_rw', models.TextField(blank=True)),
                ('message_template_fr', models.TextField(blank=True)),
                ('sms_template', models.TextField(blank=True)),
                ('sms_template_rw', models.TextField(blank=True)),
                ('sms_template_fr', models.TextField(blank=True)),
                ('available_variables', models.JSONField(blank=True, help_text='List of available template variables', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('disaster_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.disastertype')),
            ],
        ),
        migrations.CreateModel(
            name='SafetyGuide',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('title_rw', models.CharField(blank=True, max_length=200)),
                ('title_fr', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('content_rw', models.TextField(blank=True)),
                ('content_fr', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('before', 'Before Disaster'), ('during', 'During Disaster'), ('after', 'After Disaster'), ('general', 'General Preparedness')], default='general', max_length=20)),
                ('featured_image', models.CharField(blank=True, max_length=255)),
                ('attachments', models.JSONField(blank=True, null=True)),
                ('target_audience', models.CharField(choices=[('general', 'General Public'), ('families', 'Families with Children'), ('elderly', 'Elderly'), ('disabled', 'People with Disabilities'), ('business', 'Businesses'), ('schools', 'Schools')], default='general', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=True)),
                ('display_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('disaster_types', models.ManyToManyField(blank=True, to='myapp.disastertype')),
            ],
            options={
                'ordering': ['display_order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='AlertDelivery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('delivery_method', models.CharField(choices=[('sms', 'SMS'), ('push', 'Push Notification'), ('email', 'Email'), ('web', 'Web')], max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('read', 'Read')], default='pending', max_length=10)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='myapp.alert')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_deliveries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('alert', 'user', 'delivery_method')},
            },
        ),
        migrations.CreateModel(
            name='AlertResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('response_type', models.CharField(choices=[('acknowledged', 'Acknowledged'), ('safe', 'I am safe'), ('need_help', 'Need help'), ('evacuated', 'Evacuated'), ('feedback', 'Feedback')], max_length=15)),
                ('message', models.TextField(blank=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='myapp.alert')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_responses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('alert', 'user', 'response_type')},
            },
        ),
    ]
