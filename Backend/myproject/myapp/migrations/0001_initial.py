# Generated by Django 5.2.6 on 2025-09-05 15:31

import django.db.models.deletion
import django.utils.timezone
import myapp.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MessageTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(unique=True)),
                ('title_rw', models.CharField(max_length=160)),
                ('message_rw', models.TextField()),
                ('title_en', models.CharField(blank=True, max_length=160)),
                ('message_en', models.TextField(blank=True)),
                ('title_fr', models.CharField(blank=True, max_length=160)),
                ('message_fr', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='ProviderIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('provider', models.CharField(choices=[('mno', 'Telecom/MNO SMS Gateway'), ('twilio', 'Twilio'), ('africas_talking', "Africa's Talking"), ('smtp', 'SMTP Email'), ('fcm', 'Firebase Cloud Messaging'), ('other', 'Other')], max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('config', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('operator', 'Operator'), ('citizen', 'Citizen')], default='citizen', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=30)),
                ('preferred_language', models.CharField(choices=[('rw', 'Kinyarwanda'), ('en', 'English'), ('fr', 'French')], default='rw', max_length=5)),
                ('district', models.CharField(blank=True, max_length=80)),
                ('terms_accepted_at', models.DateTimeField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', myapp.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=80)),
                ('entity', models.CharField(help_text='Model name, e.g., Alert', max_length=80)),
                ('entity_id', models.CharField(max_length=64)),
                ('meta', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('actor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GeoZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('level', models.CharField(help_text='e.g., country, province, district, sector', max_length=40)),
                ('code', models.CharField(help_text='e.g., RW-KIGALI-GASABO', max_length=40, unique=True)),
                ('bbox', models.CharField(blank=True, help_text='Optional: minx,miny,maxx,maxy', max_length=255)),
                ('center_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('center_lng', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
            ],
            options={
                'ordering': ['level', 'name'],
                'indexes': [models.Index(fields=['code'], name='myapp_geozo_code_7434fb_idx'), models.Index(fields=['level'], name='myapp_geozo_level_2526c7_idx')],
                'unique_together': {('name', 'level')},
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref', models.CharField(help_text='External reference/UUID', max_length=36, unique=True)),
                ('type', models.CharField(choices=[('flood', 'Flood'), ('earthquake', 'Earthquake'), ('fire', 'Fire'), ('epidemic', 'Epidemic'), ('storm', 'Storm'), ('other', 'Other')], max_length=20)),
                ('severity', models.CharField(choices=[('info', 'Information'), ('watch', 'Watch'), ('warning', 'Warning'), ('emergency', 'Emergency')], default='info', max_length=15)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('cancelled', 'Cancelled')], default='draft', max_length=15)),
                ('title_rw', models.CharField(max_length=160)),
                ('message_rw', models.TextField()),
                ('title_en', models.CharField(blank=True, max_length=160)),
                ('message_en', models.TextField(blank=True)),
                ('title_fr', models.CharField(blank=True, max_length=160)),
                ('message_fr', models.TextField(blank=True)),
                ('channels', models.JSONField(default=list, help_text="List, e.g., ['sms','push','email','web']")),
                ('send_immediately', models.BooleanField(default=True)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('effective_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('total_targeted', models.PositiveIntegerField(default=0)),
                ('total_delivered', models.PositiveIntegerField(default=0)),
                ('total_failed', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_alerts', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_alerts', to=settings.AUTH_USER_MODEL)),
                ('target_zones', models.ManyToManyField(blank=True, related_name='alerts', to='myapp.geozone')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Shelter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('address', models.CharField(blank=True, max_length=200)),
                ('lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('lng', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('capacity', models.PositiveIntegerField(default=0)),
                ('occupancy', models.PositiveIntegerField(default=0)),
                ('contact_phone', models.CharField(blank=True, max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='shelters', to='myapp.geozone')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=30, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('preferred_language', models.CharField(choices=[('rw', 'Kinyarwanda'), ('en', 'English'), ('fr', 'French')], default='rw', max_length=5)),
                ('allow_sms', models.BooleanField(default=True)),
                ('allow_push', models.BooleanField(default=True)),
                ('allow_email', models.BooleanField(default=False)),
                ('last_known_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('last_known_lng', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscriber', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SafeCheckin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('safe', "I'm Safe"), ('need_help', 'I Need Help')], max_length=15)),
                ('note', models.CharField(blank=True, max_length=240)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkins', to='myapp.alert')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkins', to='myapp.subscriber')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_type', models.CharField(choices=[('report', 'Incident Report'), ('help', 'Help Request')], default='report', max_length=10)),
                ('title', models.CharField(max_length=160)),
                ('description', models.TextField(blank=True)),
                ('lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('lng', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=myapp.models.upload_incident)),
                ('status', models.CharField(choices=[('new', 'New'), ('triaged', 'Triaged'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('rejected', 'Rejected')], default='new', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('handled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handled_incidents', to=settings.AUTH_USER_MODEL)),
                ('zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidents', to='myapp.geozone')),
                ('subscriber', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidents', to='myapp.subscriber')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('android', 'Android'), ('ios', 'iOS'), ('web', 'Web')], max_length=10)),
                ('push_token', models.CharField(max_length=255, unique=True)),
                ('app_version', models.CharField(blank=True, max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='myapp.subscriber')),
            ],
            options={
                'ordering': ['-registered_at'],
            },
        ),
        migrations.CreateModel(
            name='AlertDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(choices=[('sms', 'SMS'), ('push', 'Mobile Push'), ('email', 'Email'), ('web', 'Web')], max_length=10)),
                ('success', models.BooleanField(default=False)),
                ('status_code', models.CharField(blank=True, help_text='Provider response code, e.g., 0, 200, 05, 91', max_length=40)),
                ('provider_msg_id', models.CharField(blank=True, max_length=100)),
                ('error_message', models.TextField(blank=True)),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='myapp.alert')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='myapp.subscriber')),
            ],
            options={
                'ordering': ['-attempted_at'],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='myapp_user_email_5d02ba_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='myapp_user_role_acc9f2_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['entity', 'entity_id'], name='myapp_audit_entity_9c329e_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['created_at'], name='myapp_audit_created_468a29_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['status'], name='myapp_alert_status_1d9f34_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['type', 'severity'], name='myapp_alert_type_db3ea7_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['effective_at'], name='myapp_alert_effecti_ffbd05_idx'),
        ),
        migrations.AddIndex(
            model_name='shelter',
            index=models.Index(fields=['is_active'], name='myapp_shelt_is_acti_e78830_idx'),
        ),
        migrations.AddIndex(
            model_name='shelter',
            index=models.Index(fields=['zone'], name='myapp_shelt_zone_id_dcc0f8_idx'),
        ),
        migrations.AddIndex(
            model_name='subscriber',
            index=models.Index(fields=['phone'], name='myapp_subsc_phone_843619_idx'),
        ),
        migrations.AddIndex(
            model_name='safecheckin',
            index=models.Index(fields=['status'], name='myapp_safec_status_f01c38_idx'),
        ),
        migrations.AddIndex(
            model_name='safecheckin',
            index=models.Index(fields=['created_at'], name='myapp_safec_created_90ca9e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='safecheckin',
            unique_together={('alert', 'subscriber')},
        ),
        migrations.AddIndex(
            model_name='incident',
            index=models.Index(fields=['status'], name='myapp_incid_status_d673bb_idx'),
        ),
        migrations.AddIndex(
            model_name='incident',
            index=models.Index(fields=['created_at'], name='myapp_incid_created_3e5035_idx'),
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['platform'], name='myapp_devic_platfor_7bf44b_idx'),
        ),
        migrations.AddIndex(
            model_name='alertdelivery',
            index=models.Index(fields=['alert', 'channel'], name='myapp_alert_alert_i_7ac5e0_idx'),
        ),
        migrations.AddIndex(
            model_name='alertdelivery',
            index=models.Index(fields=['subscriber', 'channel'], name='myapp_alert_subscri_f3756b_idx'),
        ),
        migrations.AddIndex(
            model_name='alertdelivery',
            index=models.Index(fields=['success'], name='myapp_alert_success_c7d4f7_idx'),
        ),
    ]
